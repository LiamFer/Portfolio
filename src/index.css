@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Obsidian-inspired Dark Theme */
    --background: 220 13% 11%; /* #191B1F - Cinza escuro */
    --foreground: 210 11% 91%; /* #E3E5E8 - Cinza claro */

    --card: 220 13% 15%; /* #252831 - Cinza médio para cards */
    --card-foreground: 210 11% 91%; /* #E3E5E8 - Cinza claro */

    --popover: 220 13% 11%; /* #191B1F - Cinza escuro */
    --popover-foreground: 210 11% 91%; /* #E3E5E8 - Cinza claro */

    --primary: 210 100% 60%; /* #3399FF - Azul vibrante */
    --primary-foreground: 210 11% 91%; /* #E3E5E8 - Cinza claro */

    --secondary: 220 13% 18%; /* #2A2D35 - Cinza médio */
    --secondary-foreground: 210 11% 71%; /* #B3B5B8 - Cinza médio claro */

    --muted: 220 13% 18%; /* #2A2D35 - Cinza médio */
    --muted-foreground: 210 11% 65%; /* #A1A3A6 - Cinza médio */

    --accent: 200 100% 70%; /* #66CCFF - Azul claro */
    --accent-foreground: 0 0% 9%; /* #171717 - Quase preto */

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 11% 91%;

    --border: 220 13% 18%; /* #2A2D35 - Cinza médio para bordas */
    --input: 220 13% 18%; /* #2A2D35 - Cinza médio para inputs */
    --ring: 210 100% 60%; /* #3399FF - Azul vibrante para focus */

    --radius: 0.75rem;

    /* Custom design tokens - Obsidian inspired */
    --hero-gradient: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--accent)));
    --card-gradient: linear-gradient(135deg, hsl(var(--card)), hsl(222 13% 13%));
    --glow: 0 0 25px hsl(var(--primary) / 0.4);
    --glow-accent: 0 0 35px hsl(var(--accent) / 0.5);
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --obsidian-glow: 0 0 50px hsl(var(--primary) / 0.3), 0 0 100px hsl(var(--accent) / 0.2);
  }

  .dark {
    /* Same as root - always dark Obsidian theme */
    --background: 220 13% 11%;
    --foreground: 210 11% 91%;
    --card: 220 13% 15%;
    --card-foreground: 210 11% 91%;
    --popover: 220 13% 11%;
    --popover-foreground: 210 11% 91%;
    --primary: 210 100% 60%;
    --primary-foreground: 210 11% 91%;
    --secondary: 220 13% 18%;
    --secondary-foreground: 210 11% 71%;
    --muted: 220 13% 18%;
    --muted-foreground: 210 11% 65%;
    --accent: 200 100% 70%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 11% 91%;
    --border: 220 13% 18%;
    --input: 220 13% 18%;
    --ring: 210 100% 60%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground scroll-smooth;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
    overflow-x: hidden;
  }
}

@layer components {
  .hero-button {
    @apply bg-gradient-to-r from-primary to-accent text-primary-foreground px-8 py-4 rounded-lg font-semibold transition-all duration-300 hover:shadow-lg hover:scale-105;
    box-shadow: var(--glow);
  }
  
  .hero-button:hover {
    box-shadow: var(--glow-accent);
    transform: translateY(-2px) scale(1.05);
  }
  
  .tech-card {
    @apply bg-card border border-border rounded-xl p-6 transition-all duration-300 hover:scale-105;
    background: var(--card-gradient);
    box-shadow: 0 4px 20px hsl(var(--primary) / 0.1);
  }
  
  .tech-card:hover {
    box-shadow: var(--glow);
    transform: translateY(-5px) scale(1.05);
  }
  
  .section-title {
    @apply text-4xl md:text-5xl font-bold mb-8 text-center;
    background: var(--hero-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .fade-in {
    animation: fadeInUp 0.8s ease-out forwards;
  }
  
  .bounce-in {
    animation: bounceIn 1s ease-out forwards;
  }
  
  .pulse-glow {
    animation: pulseGlow 2s ease-in-out infinite alternate;
  }

  .obsidian-glow {
    box-shadow: var(--obsidian-glow);
  }

  /* New enhanced animations */
  .slide-in-left {
    animation: slideInLeft 0.6s ease-out forwards;
  }

  .slide-in-right {
    animation: slideInRight 0.6s ease-out forwards;
  }

  .scale-on-hover {
    @apply transition-all duration-300 hover:scale-110 hover:rotate-3;
  }

  .floating {
    animation: floating 3s ease-in-out infinite;
  }

  .gradient-border {
    position: relative;
    background: linear-gradient(hsl(var(--card)), hsl(var(--card))) padding-box,
                var(--hero-gradient) border-box;
    border: 2px solid transparent;
  }

  .shimmer {
    position: relative;
    overflow: hidden;
  }

  .shimmer::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      hsl(var(--primary) / 0.2),
      transparent
    );
    animation: shimmer 2s infinite;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pulseGlow {
  0% {
    box-shadow: 0 0 25px hsl(var(--primary) / 0.4);
  }
  100% {
    box-shadow: 0 0 50px hsl(var(--primary) / 0.8), 0 0 80px hsl(var(--accent) / 0.6);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes floating {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

@keyframes spin-slow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes silkFlow {
  0% {
    transform: translateX(-100px) rotate(0deg);
  }
  100% {
    transform: translateX(100px) rotate(360deg);
  }
}